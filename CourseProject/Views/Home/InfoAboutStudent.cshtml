@model CourseProject.Models.Students.Student
@Styles.Render("~/Home/View")
<style>
    .block-info {
        display: flex;
        flex-direction: column;
        margin: 10px 0;
        justify-content: center;
    }
</style>
<div class="modal-content" id="info-form-student">
    <div class="panel-heading header-icon-box">
        Студент - @Model.User.DisplayName
        <a href="#" data-dismiss="modal">&times;</a>
    </div>
    <div class="panel-body">
        <div class="main-info">
            <div class="panel-heading">
                Информация
            </div>
            <div class="panel-body info-body">
                <div class="col-md-4 block-column">
                    <div class="photo">
                        <img src="@Url.Content(Model.User.ImagePath)" alt="" class="image" />
                    </div>
                </div>
                <div class="col-md-8 block-column">
                    <div id="personaldata" class="personaldata">
                        <div class="panel-heading" id="personaldata-heading">Личные данные</div>
                        <div id="personaldata-main" style="display: flex; flex-direction: column;">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.User.Surname, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.User.Surname)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.User.Name, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.User.Name)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.User.Patronymic, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.User.Patronymic)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.User.Gender, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.User.Gender)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.User.Role, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>Студент</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.User.Email)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.User.PhoneNumber, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.User.PhoneNumber)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.Group.Name, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.Group.Name)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.Group.FormOfEducation, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.Group.FormOfEducation)</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(model => model.AverageRating, htmlAttributes: new { @class = "control-label" })</td>
                                        <td>@Html.DisplayFor(model => model.AverageRating)</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div id="exams" class="exams">
        <div class="panel-heading text-center">
            Экзамены
        </div>
        <div class="panel-body info-body">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>№</th>
                        <th>Название</th>
                        <th>Количество <br />часов</th>
                        <th>Оценка</th>
                        <th>Дача сдачи</th>
                        <th>Преподаватель</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var groupbyexams = Model.RecordBook.Exams.GroupBy(a => a.Discipline.Term).ToList();
                    }
                    @if (Model.RecordBook.Exams.Count() != 0)
                    {
                        foreach (var group in groupbyexams)
                        {
                            <tr>
                                <td style="font-weight: 700;" colspan="6">@group.Key семестр</td>
                            </tr>
                            foreach (var (index, exam) in group.Select((v, i) => (i, v)))
                            {
                                <tr>
                                    <td>@(index + 1)</td>
                                    <td>@exam.Discipline.Name</td>
                                    <td>@exam.Discipline.СountHours</td>
                                    <td>@exam.Rating</td>
                                    <td>@exam.Discipline.DateTime.ToShortDateString()</td>
                                    <td>@exam.Discipline.Teacher.User.DisplayName</td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6">Нет экзаменов</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div id="tests" class="tests">
        <div class="panel-heading text-center">
            Зачеты
        </div>
        <div class="panel-body info-body">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>№</th>
                        <th>Название</th>
                        <th>Количество <br />часов</th>
                        <th>Оценка</th>
                        <th>Дача сдачи</th>
                        <th>Преподаватель</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var groupbytests = Model.RecordBook.Tests.GroupBy(a => a.Discipline.Term).ToList();
                    }
                    @if (Model.RecordBook.Tests.Count != 0)
                    {
                        foreach (var group in groupbytests)
                        {
                            <tr>
                                <td style="font-weight: 700;" colspan="6">@group.Key семестр</td>
                            </tr>
                            foreach (var (index, test) in group.Select((v, i) => (i, v)))
                            {
                                <tr>
                                    <td>@(index + 1)</td>
                                    <td>@test.Discipline.Name</td>
                                    <td>@test.Discipline.СountHours</td>
                                    <td>@test.Rating</td>
                                    <td>@test.Discipline.DateTime.ToShortDateString()</td>
                                    <td>@test.Discipline.Teacher.User.DisplayName</td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6">Нет зачетов</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div id="courseprojects" class="courseprojects">
        <div class="panel-heading text-center">
            Курсовые работы
        </div>
        <div class="panel-body info-body">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>№</th>
                        <th>Название</th>
                        <th>Оценка</th>
                        <th>Преподаватель</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.RecordBook.Projects.Count != 0)
                    {
                        foreach (var (index, cp) in Model.RecordBook.Projects.Select((v, i) => (i, v)))
                        {
                            <tr>
                                <td>@(index + 1)</td>
                                <td>@cp.Name</td>
                                <td>@cp.Rating</td>
                                <td>@cp.Teacher.User.DisplayName</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4">Нет курсовых работ</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
</div>