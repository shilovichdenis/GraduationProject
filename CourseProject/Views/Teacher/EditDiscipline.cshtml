@model CourseProject.Models.Discipline
@Styles.Render("~/Teacher/Manage")
@{
    Layout = null;
}
<style>
    .control-label {
        text-align: left !important;
    }

    .last-th {
        width: 100px !important;
    }
</style>
<div class="modal-content" id="edit-form-discipline">
    <div class="panel-heading header-icon-box">
        Редактирование дисциплины - @Model.Name
        <a href="#" data-dismiss="modal">&times</a>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("EditDiscipline", "Teacher", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Audience, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Audience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Audience, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Teacher.User, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" disabled value="@Model.Teacher.User.DisplayName" class="form-control" />
                    <input type="text" name="TeacherId" value="@ViewBag.Teacher.Id" class="hidden" />
                    @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GroupId, ViewBag.Groups as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.СountHours, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.СountHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.СountHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsPassed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 radio-box">
                    <span>
                        <label class="control-label">Сдана @Html.RadioButtonFor(model => model.IsPassed, true, new { autocomplete = "off", id = "radioPassed" })</label>
                    </span>
                    <span>
                        <label class="control-label">Не сдана @Html.RadioButtonFor(model => model.IsPassed, false, new { autocomplete = "off", id = "radioNotPassed" })</label>
                    </span>
                    @Html.ValidationMessageFor(model => model.IsPassed, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsExam, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 radio-box">
                    <span>
                        <label class="control-label">Экзамен @Html.RadioButtonFor(model => model.IsExam, true, new { autocomplete = "off", id = "radioExam" })</label>
                    </span>
                    <span>
                        <label class="control-label">Зачет @Html.RadioButtonFor(model => model.IsExam, false, new { autocomplete = "off", id = "radioTest" })</label>
                    </span>
                    @Html.ValidationMessageFor(model => model.IsExam, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 btn-box">
                    <input type="submit" value="Сохранить" class="btn btn-default" />
                    <input type="button" class="btn btn-default" data-dismiss="modal" value="Отмена" />
                </div>
            </div>
        }
    </div>
</div>
